Diagnostic Process: Using Postman to Isolate Errors
During the troubleshooting phase of this project, particularly when diagnosing the CREATE INDEX DDL failure, we employed Postman as a key diagnostic tool. This allowed us to bypass any potential abstractions or errors from the command line (curl) or the Python SDK and interact directly with the Couchbase Query Service REST API.

This process was critical in proving that the syntax error was not a client-side issue but was being generated by the database engine itself.

The Objective
When our CREATE INDEX ... WITH {"index_type": "vector"} command failed in the Capella Query Editor, our next step was to rule out any issues with the UI. The most direct way to do this is to send the raw request to the API endpoint that the UI would use. While curl is a good first step, Postman provides a cleaner interface that eliminates any risk of shell character-escaping errors.

Postman Request Configuration
To test the index creation, we constructed the following request in Postman:

Method: POST

URL: The direct endpoint for the Couchbase Query Service on the target cluster.

https://<your-cluster-endpoint>:18093/query/service

Authorization:

Type: Basic Auth

Username: The database user with administrative privileges (e.g., Administrator or app_user).

Password: The corresponding password for the user.

Headers:

Content-Type: application/json

Body:

The body was set to raw with the type as JSON. The payload contained the SQL++ statement to be executed.

{
  "statement": "CREATE INDEX ix_hotel_embedding_vector ON `travel-sample`.inventory.hotel(description_embedding) WITH {\\"index_type\\": \\"vector\\", \\"dimensions\\": 384, \\"similarity\\": \\"cosine\\"}"
}

Settings:

Within Postman's general settings, SSL certificate verification was turned OFF. This is the equivalent of the curl -k flag and is necessary when connecting to a server whose root certificate is not in the local machine's trust store, as is common with development environments.

Results and Conclusion
Upon sending this request, Postman received a clear 400 Bad Request response from the server. The body of the response contained the definitive error:

{
    "errors": [
        {
            "code": 5000,
            "msg": "GSI CreateIndex() - cause: Invalid parameters in with-clause: 'index_type'..."
        }
    ]
}

This result was invaluable. It provided irrefutable proof that the database engine's GSI service did not recognize the index_type parameter. The error was not in our code, the SDK, or our curl commandsâ€”it was a fundamental incompatibility with the target environment's service. This allowed us to confidently make the architectural decision to pivot to the Full-Text Search (FTS) service, which ultimately led to the project's success.
